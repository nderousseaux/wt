#!/usr/bin/env python3
# The purpose of this program is to calculate the total time worked in a week
import sys
from datetime import datetime, timedelta
import caldav
import getpass
import json
import argparse
import os

# Get arguments
parser = argparse.ArgumentParser(description='Calculate the total time worked in a week.')
parser.add_argument('-d', '--date', type=str, default=datetime.now().strftime("%Y-%m-%d"), help='Calculate the total time worked in the week of the date (format: YYYY-MM-DD)')
parser.add_argument('--config', type=str, default='~/.wt-config.json', help='Use the configuration file (default: ~/.wt-config.json)')
args = parser.parse_args()

CONFIG = args.config

# Get date from arguments
try:
	day = datetime.strptime(args.date, "%Y-%m-%d")
except ValueError:
	print("Invalid date format")
	sys.exit(1)

# First and last day of the week
first_day_week = day - timedelta(days=day.weekday())
last_day_week = day + timedelta(days=6-day.weekday())

# Check if configuration file exists
if not os.path.isfile(os.path.expanduser(CONFIG)):
	print("Configuration file not found")
	sys.exit(1)

# Load configuration (json)
with open(os.path.expanduser(CONFIG)) as f:
	config = json.load(f)

try: 
	ADDRESS = config["address"]
	PATH = config["path"]
	USERNAME = config["username"]
	CALENDAR = config["calendar"]
except KeyError:
	print("Invalid configuration file")
	sys.exit(1)

# Getting password
PASSWORD = getpass.getpass("Password: ")


# Connect to Caldav server
try:
	client = caldav.DAVClient(ADDRESS + PATH, username=USERNAME, password=PASSWORD)
	principal = client.principal()
	calendar = principal.calendar(name=CALENDAR)
except:
	print("Invalid connection")
	sys.exit(1)

# Get the events of the week
events = calendar.search(start=first_day_week, end=last_day_week, event=True, expand=True)

# Calculate the total time worked
total = 0
for event in events:
	total += event.get_duration().seconds

print("Week from " + first_day_week.strftime("%Y-%m-%d") + " to " + last_day_week.strftime("%Y-%m-%d"))
print("Total time worked: " + str(total // 3600) + "h" + str((total % 3600) // 60) + "m")

sys.exit(0)